name: "GHCJS Stuff"
on:
  schedule:
    - cron: "0 2 * * *"
  pull_request:
    paths:
      - .github/workflows/ghcjs.yml
      - haskell/ghcjs/**
  push:
    paths:
      - .github/workflows/ghcjs.yml
      - haskell/ghcjs/**
  workflow_dispatch:
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Fetch submodules
      run: |
        sed -i 's/git@github.com:/https:\/\/github.com\//g' .gitmodules
        git submodule update --init --recursive
    - name: Setup SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
    - name: Install Nix
      uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          trusted-public-keys = ${{ vars.CACHE_TRUSTED_PUBLIC_KEYS }}
          substituters = ${{ vars.CACHE_SUBSTITUTERS }}
    - name: Setup Cachix
      uses: cachix/cachix-action@v12
      with:
        name: dandart
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Go to directory
      run: |
        cd haskell/ghcjs
    - name: Push GHC shell stuff to Cachix
      run: |
        nix-store -qR --include-outputs $(nix-instantiate -A shells.ghc) | cachix push dandart
    - name: Push GHC shell stuff to private cache server
      run: |
        nix-store -qR --include-outputs $(nix-instantiate -A shells.ghc) | xargs nix-copy-closure --gzip -s --include-outputs ${{ vars.CACHE_USER }}@${{ vars.CACHE_SERVER }}
    - name: Push GHCJS shell stuff to Cachix
      run: |
        nix-store -qR --include-outputs $(nix-instantiate -A shells.ghcjs) | cachix push dandart
    - name: Push GHCJS shell stuff to private cache server
      run: |
        nix-store -qR --include-outputs $(nix-instantiate -A shells.ghcjs) | xargs nix-copy-closure --gzip -s --include-outputs ${{ vars.CACHE_USER }}@${{ vars.CACHE_SERVER }}
    - name: Build GHCJS stuff
      run: |
        nix-build -o result/ghcjs-stuff/ghcjs -A ghcjs.ghcjs-stuff
    - name: Push GHCJS stuff to Cachix
      run: |
        nix-store -qR --include-outputs $(nix-instantiate -A ghcjs.ghcjs-stuff) | cachix push dandart
    - name: Push GHCJS stuff to private cache server
      run: |
        nix-store -qR --include-outputs $(nix-instantiate -A ghcjs.ghcjs-stuff) | xargs nix-copy-closure --gzip -s --include-outputs ${{ vars.CACHE_USER }}@${{ vars.CACHE_SERVER }}
    - name: Build Reflex GHCJS stuff
      run: |
        nix-build -o result/reflex-stuff/ghcjs -A ghcjs.reflex-stuff
    - name: Push Reflex GHCJS stuff to Cachix
      run: |
        nix-store -qR --include-outputs $(nix-instantiate -A ghcjs.reflex-stuff) | cachix push dandart
    - name: Push Reflex GHCJS stuff to private cache server
      run: |
        nix-store -qR --include-outputs $(nix-instantiate -A ghcjs.reflex-stuff) | xargs nix-copy-closure --gzip -s --include-outputs ${{ vars.CACHE_USER }}@${{ vars.CACHE_SERVER }}
    - name: Build Reflex GHC stuff
      run: |
        nix-build -o result/reflex-stuff/ghc -A ghc.reflex-stuff
    - name: Push Reflex GHC stuff to Cachix
      run: |
        nix-store -qR --include-outputs $(nix-instantiate -A ghc.reflex-stuff) | cachix push dandart
    - name: Push Reflex GHC stuff to private cache server
      run: |
        nix-store -qR --include-outputs $(nix-instantiate -A ghc.reflex-stuff) | xargs nix-copy-closure --gzip -s --include-outputs ${{ vars.CACHE_USER }}@${{ vars.CACHE_SERVER }}
    - name: Build JSaddle GHCJS stuff
      run: |
        nix-build -o result/jsaddle-stuff/ghcjs -A ghcjs.jsaddle-stuff
    - name: Push JSaddle GHCJS stuff to Cachix
      run: |
        nix-store -qR --include-outputs $(nix-instantiate -A ghcjs.jsaddle-stuff) | cachix push dandart
    - name: Push JSaddle GHCJS stuff to private cache server
      run: |
        nix-store -qR --include-outputs $(nix-instantiate -A ghcjs.jsaddle-stuff) | xargs nix-copy-closure --gzip -s --include-outputs ${{ vars.CACHE_USER }}@${{ vars.CACHE_SERVER }}
    - name: Build JSaddle GHC stuff
      run: |
        nix-build -o result/jsaddle-stuff/ghc -A ghc.jsaddle-stuff
    - name: Push JSaddle GHC stuff to Cachix
      run: |
        nix-store -qR --include-outputs $(nix-instantiate -A ghc.jsaddle-stuff) | cachix push dandart
    - name: Push JSaddle GHC stuff to private cache server
      run: |
        nix-store -qR --include-outputs $(nix-instantiate -A ghc.jsaddle-stuff) | xargs nix-copy-closure --gzip -s --include-outputs ${{ vars.CACHE_USER }}@${{ vars.CACHE_SERVER }}
    
