name: "GHCJS Stuff"
on:
  schedule:
    - cron: "0 2 * * *"
  pull_request:
    paths:
      - .github/workflows/ghcjs.yml
      - haskell/ghcjs/**
  push:
    paths:
      - .github/workflows/ghcjs.yml
      - haskell/ghcjs/**
  workflow_dispatch:
jobs:
  ghcjs-shell-stuff:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Fetch submodules
      run: |
        sed -i 's/git@github.com:/https:\/\/github.com\//g' .gitmodules
        git submodule update --init --recursive
    - name: Install Nix
      uses: cachix/install-nix-action@v27
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          trusted-public-keys = ${{ vars.CACHE_TRUSTED_PUBLIC_KEYS }}
          substituters = ${{ vars.CACHE_SUBSTITUTERS }}
    - name: Setup Cachix
      uses: cachix/cachix-action@v12
      with:
        name: dandart
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Go to directory
      run: |
        cd haskell/ghcjs
    - name: Push GHCJS shell stuff to Cachix
      run: |
        nix-store -qR --include-outputs $(nix-instantiate -A shells.ghcjs) | cachix push dandart
  ghcjs-stuff:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Fetch submodules
      run: |
        sed -i 's/git@github.com:/https:\/\/github.com\//g' .gitmodules
        git submodule update --init --recursive
    - name: Install Nix
      uses: cachix/install-nix-action@v27
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          trusted-public-keys = ${{ vars.CACHE_TRUSTED_PUBLIC_KEYS }}
          substituters = ${{ vars.CACHE_SUBSTITUTERS }}
    - name: Setup Cachix
      uses: cachix/cachix-action@v12
      with:
        name: dandart
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Go to directory and make directories
      run: |
        cd haskell/ghcjs
        mkdir -p result/ghcjs-stuff
    - name: Build GHCJS stuff
      run: |
        cd haskell/ghcjs
        nix-build -o result/ghcjs-stuff/ghcjs -A ghcjs.ghcjs-stuff
    - name: Push GHCJS stuff to Cachix
      run: |
        cd haskell/ghcjs
        nix-store -qR --include-outputs $(nix-instantiate -A ghcjs.ghcjs-stuff) | cachix push dandart
  reflex-ghcjs-stuff:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Fetch submodules
      run: |
        sed -i 's/git@github.com:/https:\/\/github.com\//g' .gitmodules
        git submodule update --init --recursive
    - name: Install Nix
      uses: cachix/install-nix-action@v27
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          trusted-public-keys = ${{ vars.CACHE_TRUSTED_PUBLIC_KEYS }}
          substituters = ${{ vars.CACHE_SUBSTITUTERS }}
    - name: Setup Cachix
      uses: cachix/cachix-action@v12
      with:
        name: dandart
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Go to directory and make directories
      run: |
        cd haskell/ghcjs
        mkdir -p result/reflex-stuff
    - name: Build Reflex GHCJS stuff
      run: |
        cd haskell/ghcjs
        nix-build -o result/reflex-stuff/ghcjs -A ghcjs.reflex-stuff
    - name: Push Reflex GHCJS stuff to Cachix
      run: |
        cd haskell/ghcjs
        nix-store -qR --include-outputs $(nix-instantiate -A ghcjs.reflex-stuff) | cachix push dandart
